/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ResultadosBusqueda.java
 *
 * Created on 04/05/2011, 01:38:15 PM
 */
package principal;

import BaseDatos.BaseDatos;
import algoritmos.Caso3;
import objetos.Libros;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kradac
 */
public class ResultadosBusqueda extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private Info_Libro info = null;
    private BaseDatos bd;
    private ArrayList<Libros> listaLibros;

    /** Creates new form ResultadosBusqueda */
    public ResultadosBusqueda() {
        initComponents();
    }

    public ResultadosBusqueda(ArrayList<Libros> listaLibros, BaseDatos bd) {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/iconos/idea.png")).getImage());
        this.bd = bd;
        this.listaLibros = listaLibros;
        llenarTablasLibros(listaLibros);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstLibros = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Resultados de Busqueda");

        lstLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Título", "Autor", "Categoría", "Precio"
            }
        ));
        lstLibros.setNextFocusableComponent(btnRegresar);
        lstLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lstLibrosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(lstLibros);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Resultados de Búsqueda");

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/regresar.png"))); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(btnRegresar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegresar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void lstLibrosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstLibrosMousePressed
        int intClicks = evt.getClickCount();
        int intBoton = evt.getButton();

        if (intClicks == 1 && intBoton == 1) {
            int opSelect = listaLibros.size() - lstLibros.getSelectedRow() - 1;

            actualizarVistasLibro(listaLibros.get(opSelect));

            try {
                if (info == null) {

                    //Calcular libros como sugerencias
                    //Caso 3.
                    String[] lib = new Caso3().librosCaso3(4, bd);
                    
                    info = new Info_Libro(listaLibros.get(opSelect),
                            bd,
                            Integer.parseInt(lib[0]),
                            lib[1],
                            Integer.parseInt(lib[2]),
                            lib[3],
                            Integer.parseInt(lib[4]),
                            lib[5]);
                    info.setVisible(true);
                    info.setLocationRelativeTo(this);
                } else {
                    info.setLibroSeleccionado(listaLibros.get(opSelect));
                    info.setVisible(true);
                    info.setLocationRelativeTo(this);
                }
            } catch (ArrayIndexOutOfBoundsException aex) {
            }
        }
    }//GEN-LAST:event_lstLibrosMousePressed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                new ResultadosBusqueda().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable lstLibros;
    // End of variables declaration//GEN-END:variables

    private void llenarTablasLibros(ArrayList<Libros> listaLibros) {
        limpiarTablaBusqueda();
        dtm = (DefaultTableModel) lstLibros.getModel();

        for (Libros l : listaLibros) {
            String[] datos = {
                l.getTitulo(),
                l.getAutor().getNombre(),
                l.getCategoria().getCategoria(),
                "" + l.getPrecio()
            };
            dtm.insertRow(0, datos);
        }
    }

    /**
     * Limpia las filas de la tabla
     */
    private void limpiarTablaBusqueda() {
        dtm = (DefaultTableModel) lstLibros.getModel();
        int n_filas = lstLibros.getRowCount();
        for (int i = 0; i < n_filas; i++) {
            dtm.removeRow(0);
        }
    }

    /**
     * Incrementa en uno el numero de vistas que tiene ese libro y actualiza la 
     * base de datos
     * @param libroSeleccionado
     */
    private void actualizarVistasLibro(Libros libroSeleccionado) {
        bd.actualizarVistasLibro(libroSeleccionado.getVistas()+1,libroSeleccionado.getIdLibro());
    }
}
